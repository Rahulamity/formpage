{"ast":null,"code":"var _jsxFileName = \"/Users/rahulthakur/Downloads/form/src/screen/AddProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProfile = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [first_name, setfirst_name] = useState(\"\");\n  const [last_name, setlast_name] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [phone_no, setphone_no] = useState(\"\");\n  const [gender, setgender] = useState(\"\");\n  const [dob, setdob] = useState(\"\");\n  const [city, setcity] = useState(\"\");\n  const [state, setstate] = useState(\"\");\n  const [first_name_err, setfirst_name_err] = useState(false);\n  const [last_name_err, setlast_name_err] = useState(false);\n  const [email_err, setemail_err] = useState(false);\n  const [phone_err, setphone_err] = useState(false);\n  const [gender_err, setgender_err] = useState(false);\n  const [dob_err, setdob_err] = useState(false);\n  const [city_err, setcity_err] = useState(false);\n  const [state_err, setstate_err] = useState(false);\n  const [update, setupdate] = useState(false);\n  const Submit = () => {\n    // Retrieve existing data from local storage\n    const existingData = localStorage.getItem(\"Data\");\n    const parsedData = existingData ? JSON.parse(existingData) : [];\n    // Create a new profile object\n    const newProfile = {\n      first_name,\n      last_name,\n      email,\n      phone_no,\n      Date_of_birth: dob,\n      gender,\n      city,\n      state\n    };\n\n    // Append the new profile to the existing data\n    parsedData.push(newProfile);\n\n    // Store the updated data in the local storage\n    const updatedData = JSON.stringify(parsedData);\n    localStorage.setItem(\"Data\", updatedData);\n    alert(\"Form Submitted Successfully\");\n  };\n  useEffect(() => {\n    var _location$state;\n    const data = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.data;\n    if (data) {\n      setfirst_name(data.first_name);\n      setlast_name(data.last_name);\n      setemail(data.email);\n      setphone_no(data.phone_no);\n      setdob(data.Date_of_birth);\n      setgender(data.gender);\n      setcity(data.city);\n      setstate(data.state);\n      setupdate(true);\n    }\n  }, [location.state]);\n  useEffect(() => {\n    // Validation logic for each input field\n    // For example, if (first_name === \"\") setfirst_name_err(true);\n  }, [first_name, last_name, gender, dob, phone_no, email, city, state]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      // Validation logic for each input field\n      // For example, if (first_name === \"\") setfirst_name_err(true);\n      // Check all fields and set error states\n      if (first_name === \"\" || last_name === \"\" || email === \"\" || phone_no === \"\" || gender === \"\" || dob === \"\" || city === \"\" || state === \"\") {\n        setfirst_name_err(first_name === \"\");\n        setlast_name_err(last_name === \"\");\n        setemail_err(email === \"\");\n        setphone_err(phone_no === \"\");\n        setgender_err(gender === \"\");\n        setdob_err(dob === \"\");\n        setcity_err(city === \"\");\n        setstate_err(state === \"\");\n      } else {\n        // All fields are filled, submit the form\n        Submit();\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProfile, \"Sgxog1yXd0ogQQT4j6RCcGnxAKQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddProfile;\nexport default AddProfile;\nvar _c;\n$RefreshReg$(_c, \"AddProfile\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","AddProfile","_s","navigate","location","first_name","setfirst_name","last_name","setlast_name","email","setemail","phone_no","setphone_no","gender","setgender","dob","setdob","city","setcity","state","setstate","first_name_err","setfirst_name_err","last_name_err","setlast_name_err","email_err","setemail_err","phone_err","setphone_err","gender_err","setgender_err","dob_err","setdob_err","city_err","setcity_err","state_err","setstate_err","update","setupdate","Submit","existingData","localStorage","getItem","parsedData","JSON","parse","newProfile","Date_of_birth","push","updatedData","stringify","setItem","alert","_location$state","data","onSubmit","e","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahulthakur/Downloads/form/src/screen/AddProfile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst AddProfile = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [first_name, setfirst_name] = useState(\"\");\r\n  const [last_name, setlast_name] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [phone_no, setphone_no] = useState(\"\");\r\n  const [gender, setgender] = useState(\"\");\r\n  const [dob, setdob] = useState(\"\");\r\n  const [city, setcity] = useState(\"\");\r\n  const [state, setstate] = useState(\"\");\r\n\r\n  const [first_name_err, setfirst_name_err] = useState(false);\r\n  const [last_name_err, setlast_name_err] = useState(false);\r\n  const [email_err, setemail_err] = useState(false);\r\n  const [phone_err, setphone_err] = useState(false);\r\n  const [gender_err, setgender_err] = useState(false);\r\n  const [dob_err, setdob_err] = useState(false);\r\n  const [city_err, setcity_err] = useState(false);\r\n  const [state_err, setstate_err] = useState(false);\r\n\r\n  const [update, setupdate] = useState(false);\r\n\r\n  const Submit = () => {\r\n    // Retrieve existing data from local storage\r\n    const existingData = localStorage.getItem(\"Data\");\r\n    const parsedData = existingData ? JSON.parse(existingData) : [];\r\n    // Create a new profile object\r\n    const newProfile = {\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      phone_no,\r\n      Date_of_birth: dob,\r\n      gender,\r\n      city,\r\n      state,\r\n    };\r\n\r\n    // Append the new profile to the existing data\r\n    parsedData.push(newProfile);\r\n\r\n    // Store the updated data in the local storage\r\n    const updatedData = JSON.stringify(parsedData);\r\n    localStorage.setItem(\"Data\", updatedData);\r\n\r\n    alert(\"Form Submitted Successfully\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = location.state?.data;\r\n    if (data) {\r\n      setfirst_name(data.first_name);\r\n      setlast_name(data.last_name);\r\n      setemail(data.email);\r\n      setphone_no(data.phone_no);\r\n      setdob(data.Date_of_birth);\r\n      setgender(data.gender);\r\n      setcity(data.city);\r\n      setstate(data.state);\r\n      setupdate(true);\r\n    }\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    // Validation logic for each input field\r\n    // For example, if (first_name === \"\") setfirst_name_err(true);\r\n  }, [first_name, last_name, gender, dob, phone_no, email, city, state]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        // Validation logic for each input field\r\n        // For example, if (first_name === \"\") setfirst_name_err(true);\r\n        // Check all fields and set error states\r\n        if (\r\n          first_name === \"\" ||\r\n          last_name === \"\" ||\r\n          email === \"\" ||\r\n          phone_no === \"\" ||\r\n          gender === \"\" ||\r\n          dob === \"\" ||\r\n          city === \"\" ||\r\n          state === \"\"\r\n        ) {\r\n          setfirst_name_err(first_name === \"\");\r\n          setlast_name_err(last_name === \"\");\r\n          setemail_err(email === \"\");\r\n          setphone_err(phone_no === \"\");\r\n          setgender_err(gender === \"\");\r\n          setdob_err(dob === \"\");\r\n          setcity_err(city === \"\");\r\n          setstate_err(state === \"\");\r\n        } else {\r\n          // All fields are filled, submit the form\r\n          Submit();\r\n        }\r\n      }}\r\n    >\r\n      {/* Form fields and error messages */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}